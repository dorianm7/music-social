# This is a basic workflow to help you get started with Actions

name: Dev CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the dev branch
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set environment variables
env:
  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
  REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
  REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
  REACT_APP_TEST_USER_EMAIL: ${{ secrets.REACT_APP_TEST_USER_EMAIL }}
  REACT_APP_TEST_USER_PASSWORD: ${{ secrets.REACT_APP_TEST_USER_PASSWORD }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets: [
          "music-compatibility-478eb"
          "music-social-storybook"
        ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2      

      # Set up Node
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
        
      # Install all necessary dependencies
      - run: yarn install

      # Run the tests
      - name: Run tests
        run: yarn test
      
      # Run the linter
      - name: Run ESLint
        run: ./node_modules/.bin/eslint .

      # Build app
      - run: yarn build

      # Build storybook
      - run: yarn build-storybook

      # Deploy to Firebase preview channel
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MUSIC_COMPATIBILITY_478EB }}'
          target: ${{ matrix.targets }}
          projectId: music-compatibility-478eb